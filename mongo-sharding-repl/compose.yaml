name: mongo-sharding-repl

services:
  pymongo_api:
    container_name: pymongo_api
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - configSrv
      - shard1-1
      - shard1-2
      - shard1-3
      - shard2-1
      - shard2-2
      - shard2-3
      - mongos_router
    ports:
      - 8080:8080
    networks:
      app-network-2:
        ipv4_address: 173.17.0.5
    environment:
      MONGODB_URL: "mongodb://mongos_router:27017"
      MONGODB_DATABASE_NAME: "somedb"

  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network-2:
        ipv4_address: 173.17.0.7
    command: ["mongos", "--configdb", "config_server/configSrv:27019", "--bind_ip_all", "--port", "27017"]
    healthcheck: &healthcheck
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  configSrv:
    image: mongo:latest
    container_name: configSrv 
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network-2:
        ipv4_address: 173.17.0.9
    volumes:
      - config-data:/data/db
    command: ["--configsvr", "--replSet", "config_server", "--bind_ip_all", "--port", "27019"] 
    healthcheck: *healthcheck


  shard1-1:
    image: mongo:latest
    container_name: shard1-1
    restart: always
    ports:
      - "27011:27018"
    networks:
      app-network-2:
        ipv4_address: 173.17.0.11
    volumes:
      - shard1-1-data:/data/db
    command: ["--shardsvr", "--replSet", "shard1", "--bind_ip_all", "--port", "27018"]
    healthcheck: *healthcheck

  shard1-2:
    image: mongo:latest
    container_name: shard1-2
    restart: always
    ports:
      - "27012:27018"
    networks:
      app-network-2:
        ipv4_address: 173.17.0.12
    volumes:
      - shard1-2-data:/data/db
    command: ["--shardsvr", "--replSet", "shard1", "--bind_ip_all", "--port", "27018"]
    healthcheck: *healthcheck
    
  shard1-3:
    image: mongo:latest
    container_name: shard1-3
    restart: always
    ports:
      - "27013:27018"
    networks:
      app-network-2:
        ipv4_address: 173.17.0.13
    volumes:
      - shard1-3-data:/data/db
    command: ["--shardsvr", "--replSet", "shard1", "--bind_ip_all", "--port", "27018"]
    healthcheck: *healthcheck


  shard2-1:
    image: mongo:latest
    container_name: shard2-1
    restart: always
    ports:
      - "27021:27018"
    networks:
      app-network-2:
        ipv4_address: 173.17.0.21
    volumes:
      - shard2-1-data:/data/db
    command: ["--shardsvr", "--replSet", "shard2", "--bind_ip_all", "--port", "27018"]
    healthcheck: *healthcheck

  shard2-2:
    image: mongo:latest
    container_name: shard2-2
    restart: always
    ports:
      - "27022:27018"
    networks:
      app-network-2:
        ipv4_address: 173.17.0.22
    volumes:
      - shard2-2-data:/data/db
    command: ["--shardsvr", "--replSet", "shard2", "--bind_ip_all", "--port", "27018"]
    healthcheck: *healthcheck
    
  shard2-3:
    image: mongo:latest
    container_name: shard2-3
    restart: always
    ports:
      - "27023:27018"
    networks:
      app-network-2:
        ipv4_address: 173.17.0.23
    volumes:
      - shard2-3-data:/data/db
    command: ["--shardsvr", "--replSet", "shard2", "--bind_ip_all", "--port", "27018"]
    healthcheck: *healthcheck

networks:
  app-network-2:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  config-data:
  shard1-1-data:
  shard1-2-data:
  shard1-3-data:
  shard2-1-data:
  shard2-2-data:
  shard2-3-data:
